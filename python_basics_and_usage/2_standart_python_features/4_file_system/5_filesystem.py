# Однако работа с файловой системой не ограничивается работой лишь с файлами.
# В данном шаге мы узнаем, какие средства языка python нам могут помочь в работе
# с файловой системой.

# Главными героями данного шага будут библиотеки os и os.path.
# Они связаны с ОС вашего компа и с путями в ОС.
# Мы сможем узнать является ли путь указанной директории или папки.
# Существует ли он вообще. А так же как обходить папки рекурсивно.

# Начнем с самого простого.
import os
import os.path

print(os.listdir())
# Перечисление всех файлов и папок.
# Если мы запускаем данную функцию без аргументов, мы прежде всего перечисляем
# файлы и папки внутри текущей директории.

# Стоит отметить, что текстовые файлы поместили в папку tests.
# В папке idea PyCharm хранит служебные файлы.

# Для того чтобы узнать какая папка является текущей, мы можем например:

print(os.getcwd())

# Внутрь функции listdir() в качеству аргумента можно передать путь, который будет
# относительным путем для какой-нибудь директории.
print(os.listdir("tests"))  # Содержимое папки tests.

# Для того чтобы узнать существует файл или нет:
print(os.path.exists("4_hw.py"))
print(os.path.exists("hello.txt"))

# Функция .exists() работает не только для файлов, но и для директорий.
print(os.path.exists("tests"))
print(os.path.exists("files"))

print("*")
# Мы можем проверить какой путь является папкой, а какой файлом:
print(os.path.isdir("tests"))
print(os.path.isdir("4_hw.py"))

# Также можем узнать абсолютный путь по относительному:
print(os.path.abspath("tests"))
print(os.path.abspath("t"))  # Пишет, хотя такого пути нет. Просто дописывает к текущему,
# что получает в качестве параметра.

# Мы можем сменить текущую директорию используя:
print('+')
os.chdir("tests")
print(os.getcwd())  # Вывод файлов в текущей директории.

# На мой взгляд одна и самых крутых функций библиотеки os является функция os.walk().
# Она позволяет рекурсивно пройтись по всем папкам, подпапкам и т.д.

# Функция os.walk() на самом деле возвращает нам генератор.
# И каждый раз, когда мы будем спрашивать следующее значение у этого генератора,
# он будет возвращать нам кортеж из трех элементов.
# 1-м элементом является строковое представление текущей директории,
# которую он рассматривает.
# 2-м элементом является список всех папок, которые есть в данной директории.
# 3-м элементом является список всех файлов, которые есть в данной директории.

print("hehe")
#for current_dir, dirs, files in os.walk("../.."):  # . - текущая директория (откуда ему начинать).
for current_dir, dirs, files in os.walk("."):  # . - текущая директория (откуда ему начинать).
    print(current_dir, dirs, files)

# Как копировать файлы?
# Для этого нам понадобится библиотека shutil

import shutil

os.chdir("..")
shutil.copy("tests/test1.txt", "tests/test3.txt")
# Скопировать содержимое файл test1.txt в test3.txt, при этом он создается.

# В этой библиотеке есть функция для копирования директории.
shutil.copytree("tests", "tests/tests")
# Копирование со всем содержимым.
