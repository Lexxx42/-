# Функции возвращаемое значение

# Возвращаемое значение - это по сути и есть результат работы нашей функции.
# Для того чтобы функция вернула значение в языке Python есть ключевое слово return
# после которого чаще всего и следует возвращаемое значение

# Важное замечание: интерпретатор не продолжает выполнение функции после конструкции return.
# Каждый раз, когда мы пишем return функция возвращает значение и снимается со стека

# Поэтому если в нашей функции написано несколько конструкций return то будет исполнена только одна из них.

# Вторым важным замечанием является, то что функции в языке Python не обязательно что-то возвращать.
# мы можем не поместить конструкцию return внутри тела функции и тогда функция завершит свое исполнение естественным
# образом, когда интерпретатор строка за строкой исполнит все тело функции. Так же мы можем ничего не вернуть,
# если поместим внутри тела функции пустой return, return у которого мы не укажем явно возвращаемое значение.

# Что происходит с результатом функции, если наша функция ничего не вернула. для этого в языке Python
# есть специальная конструкция None.
# None - это объект, в переводе с английского - ничто. Используется в том случае, когда функция ничего не возвращает.
# Если функция ничего не возвращает, то результат функции будет всегда ссылаться на объект None.

# Для примера посмотрим на функцию принт(), принт принамиет аргументы, выводит из в консоль, но сама функция
# ничего не возвращает.

x = print(4)

print(x)  # None
# print() будет ссылаться на None, так как ничего не возвращает, и х будет ссылаться на None, т.к. мы использовали
# оператор присваивания.

# None является таким же объектом языка python, как и все остальные поэтому у него есть тип.
# Типом объекта None является NoneType
# При этом NoneType принимает одно единственное значение None.
# Поэтому в любой момент времени в оперативной памяти всегда находится только один объект None
# и все ссылки и все объекты, которые ссылаются на None на самом деле ссылаются на один и тот же объект.

# Поэтому единственным правильным способом проверить ссылается ли переменная на None
# является проверка через is
print(x is None)  # True
