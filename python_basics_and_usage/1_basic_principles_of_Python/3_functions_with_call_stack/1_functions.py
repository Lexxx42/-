# Функция является фундаментальной концепцией программирования в целом
# потому что есть почти во всех языках программирования
# поэтому прежде чем говорить о том, как функции устроены в языке python
# как их запускаем и исполняется код
# Поговорим о том почему люди пишут функции

# 1 я причина - пере использование кода
# предположим, что у нас есть кусок кода, который решает достаточно определенную задачу,
# например находит минимум в списке.
# звучит логично вынести этот кусок кода в отдельную функцию, которая и решала бы нашу задачу
# потому что когда мы в следующий раз захотим решить эту задачу нам было бы проще вызвать функцию,
# чем снова писать этот блок кода. Кроме того, что ваш код станет короче,
# потому что вам не надо писать блок кода несколько раз. Достаточно написать один раз функцию, потом трижды ее вызвать.
# Уменьшаем вероятность ошибки, потому что достаточно один раз правильно реализовать функцию, вместо того,
# чтобы правильно написать кусок кода.

# 2 причина - структурирование кода. Если бы мы не писали функции, весь наш код выглядел бы как огромная простыня
# инструкций, она сложно читается и плохо понятна. Хорошей практикой структурирования кода является написание функций
# потому что таким образом мы создаем маленький и понятные компоненты.
# таким образом, поняв как работают каждый из компонентов нам сильно проще понять, как работает код целиком.

# 3 причина - сокрытие деталей реализации. Мы можем не знать как устроена внутри функция print(), мы знаем, что
# она принимает аргументы и выводит их в терминал. И этого знания нам достаточно, чтобы ее использовать
# мы можем не заморачиваться как же функция устроена внутри. То же самое для функции sort(), которая сортирует список.
# мы можем не знать каким из множества алгоритмов сортировки пользуется внутри функция sort(), однако мы доверяемся
# разработчикам языка и просто ей пользуемся.

# Есть еще множество причин использовать функции, но основный всего 3: переиспользование кода, структурирование кода,
# сокрытие деталей реализации.
