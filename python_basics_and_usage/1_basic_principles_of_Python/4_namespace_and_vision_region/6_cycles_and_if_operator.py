# Циклы и условный оператор

# Важным замечанием является то, когда не создаются локальные пространства имен

# Они не создаются, когда мы используем условные операторы и циклы
# Рассмотрим на простых примерах

x = 13
if x % 2 == 1:
    x += 1
print(x)

# в условном операторе мы используем имя определенное выше. Оператор гарантирует нам, что мы получим наименьшее четное значение >= данному.

# Во второй конструкции счетчик i передает значения [0,1,2,3,4]

for i in range(5):
    x = i*i
print(x)

# Таким образом мы внутри цикла for создали переменную х и переместили ее в глобальный неймспейс

# Последний пример из цикла "как делать не нужно"

for i in []:
    y = i*i
print(y)  # NameError: name 'y' is not defined

# Таким образом, условные операторы и циклы не создают пространства имен, прежде всего это удобно тем, что мы можем использовать и изменять переменные уже
# в текущем пространстве имен. Так же можем создавать новые имена в пространстве имен, однако стоит быть внимательным и аккуратным
# если по ем или иным причинам вы не зайдете внутрь условного оператора или цикла, то и имя в текущем пространстве имен вы не создадите
