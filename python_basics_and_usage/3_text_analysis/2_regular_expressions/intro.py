# Тема данного урока - регулярные выражения в языке python.

# Регулярные выражения -- это один из самых мощных инструментов для поиска нужной нам информации
# внутри текстового документа.

# Регулярные выражения встроены в некоторые языки программирования, а в некоторых ЯП
# предоставляются стандартной библиотекой.
# В том числе и в языке python.

# Базовая концепция регулярных выражений крайне простая.
# Мы сначала с помощью регулярных выражений описываем шаблон,
# а потом можем проверить подходит ли наша строка под данный шаблон.
# Или даже больше, мы можем в большом тексте найти все подстроки, которые
# подходят под данный шаблон.

# То какой смысл мы закладываем в регулярные выражения будет ограничен лишь здравым смыслом
# и нашей фантазией.

# Мы можем найти с помощью регулярных выражений например все телефонные номера в тексте,
# все почтовые ящики и даже правильный по pep8 отступ.

# Однако прежде чем мы начнем работать с регулярными выражениями в языке python,
# было бы неплохо вспомнить что такое сырые строки и что их отличает от обычных строк.


x = "hello\nworld"
y = "hello\"world"
print(x)
print(y)
# Когда мы используем обычные строки в языке python, то мы используем обратный слеш для того
# чтобы заэкранировать какой-нибудь символ.
# Например, мы так можем указать перенос строки. Или кавычку.
# Так интерпретатор поймет, что строку нужно окончить не на второй кавычке, а на третьей.

# Однако нам не всегда нужно такое поведение от обратного слеша.
# Когда мы будем писать регулярные выражения мы захотим, чтобы обратный слеш вел себя,
# как обратный слеш, просто как символ.

# Чтобы указать интерпретатору, что все символы в строке нужно воспринимать как символы,
# ровно в том виде в котором они указаны, мы можем указать в начале строки символ r.

print("***")
x = r"hello\nworld"  # raw
y = r"hello\"world"  # raw
print(x)
print(y)

# Такая строка называется сырой.

# В связи стем, что некоторые символы в регулярных выражениях содержат в своей
# записи обратный слеш, то мы будем использовать именно сырые строки
# для того, чтобы описывать шаблоны регулярных выражений.
